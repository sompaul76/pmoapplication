// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.capgemini.pmo.entity;

import com.capgemini.pmo.constant.ActiveInactiveFlag;
import com.capgemini.pmo.dao.BUDAO;
import com.capgemini.pmo.entity.BuisnessUnit;
import com.capgemini.pmo.entity.BuisnessUnitDataOnDemand;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect BuisnessUnitDataOnDemand_Roo_DataOnDemand {
    
    declare @type: BuisnessUnitDataOnDemand: @Component;
    
    private Random BuisnessUnitDataOnDemand.rnd = new SecureRandom();
    
    private List<BuisnessUnit> BuisnessUnitDataOnDemand.data;
    
    @Autowired
    BUDAO BuisnessUnitDataOnDemand.bUDAO;
    
    public BuisnessUnit BuisnessUnitDataOnDemand.getNewTransientBuisnessUnit(int index) {
        BuisnessUnit obj = new BuisnessUnit();
        setBUActive(obj, index);
        setBUHead(obj, index);
        setBUName(obj, index);
        return obj;
    }
    
    public void BuisnessUnitDataOnDemand.setBUActive(BuisnessUnit obj, int index) {
        ActiveInactiveFlag BUActive = ActiveInactiveFlag.class.getEnumConstants()[0];
        obj.setBUActive(BUActive);
    }
    
    public void BuisnessUnitDataOnDemand.setBUHead(BuisnessUnit obj, int index) {
        String BUHead = "BUHead_" + index;
        if (BUHead.length() > 100) {
            BUHead = BUHead.substring(0, 100);
        }
        obj.setBUHead(BUHead);
    }
    
    public void BuisnessUnitDataOnDemand.setBUName(BuisnessUnit obj, int index) {
        String BUName = "BUName_" + index;
        if (BUName.length() > 50) {
            BUName = BUName.substring(0, 50);
        }
        obj.setBUName(BUName);
    }
    
    public BuisnessUnit BuisnessUnitDataOnDemand.getSpecificBuisnessUnit(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        BuisnessUnit obj = data.get(index);
        Long id = obj.getId();
        return bUDAO.findOne(id);
    }
    
    public BuisnessUnit BuisnessUnitDataOnDemand.getRandomBuisnessUnit() {
        init();
        BuisnessUnit obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return bUDAO.findOne(id);
    }
    
    public boolean BuisnessUnitDataOnDemand.modifyBuisnessUnit(BuisnessUnit obj) {
        return false;
    }
    
    public void BuisnessUnitDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = bUDAO.findAll(new org.springframework.data.domain.PageRequest(from / to, to)).getContent();
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'BuisnessUnit' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<BuisnessUnit>();
        for (int i = 0; i < 10; i++) {
            BuisnessUnit obj = getNewTransientBuisnessUnit(i);
            try {
                bUDAO.save(obj);
            } catch (final ConstraintViolationException e) {
                final StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    final ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getRootBean().getClass().getName()).append(".").append(cv.getPropertyPath()).append(": ").append(cv.getMessage()).append(" (invalid value = ").append(cv.getInvalidValue()).append(")").append("]");
                }
                throw new IllegalStateException(msg.toString(), e);
            }
            bUDAO.flush();
            data.add(obj);
        }
    }
    
}
